# Generated by Django 5.0.4 on 2024-08-13 14:43

import datetime
import django.core.validators
import django.db.models.deletion
import django_resized.forms
import tradings.helpers
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, unique=True)),
                ('hexadecimal', models.CharField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('AF', 'Afghanistan'), ('AL', 'Albania'), ('DZ', 'Algeria'), ('AS', 'American Samoa'), ('AD', 'Andorra'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AQ', 'Antarctica'), ('AG', 'Antigua And Barbuda'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AW', 'Aruba'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BS', 'Bahamas'), ('BH', 'Bahrain'), ('BD', 'Bangladesh'), ('BB', 'Barbados'), ('BY', 'Belarus'), ('BE', 'Belgium'), ('BZ', 'Belize'), ('BJ', 'Benin'), ('BM', 'Bermuda'), ('BT', 'Bhutan'), ('BO', 'Bolivia'), ('BA', 'Bosnia And Herzegovina'), ('BW', 'Botswana'), ('BV', 'Bouvet Island'), ('BR', 'Brazil'), ('IO', 'British Indian Ocean Territory'), ('BN', 'Brunei Darussalam'), ('BG', 'Bulgaria'), ('BF', 'Burkina Faso'), ('BI', 'Burundi'), ('KH', 'Cambodia'), ('CM', 'Cameroon'), ('CA', 'Canada'), ('CV', 'Cape Verde'), ('KY', 'Cayman Islands'), ('CF', 'Central African Republic'), ('TD', 'Chad'), ('CL', 'Chile'), ('CN', 'China'), ('CX', 'Christmas Island'), ('CC', 'Cocos (Keeling) Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CG', 'Congo'), ('CD', 'Congo, The Democratic Republic Of'), ('CK', 'Cook Islands'), ('CR', 'Costa Rica'), ('CI', "Cã”Te D'Ivoire"), ('HR', 'Croatia'), ('CU', 'Cuba'), ('CY', 'Cyprus'), ('CZ', 'Czech Republic'), ('DK', 'Denmark'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DO', 'Dominican Republic'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('SV', 'El Salvador'), ('GQ', 'Equatorial Guinea'), ('ER', 'Eritrea'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FK', 'Falkland Islands (Malvinas)'), ('FO', 'Faroe Islands'), ('FJ', 'Fiji'), ('FI', 'Finland'), ('FR', 'France'), ('GF', 'French Guiana'), ('PF', 'French Polynesia'), ('TF', 'French Southern Territories'), ('GA', 'Gabon'), ('GM', 'Gambia'), ('GE', 'Georgia'), ('DE', 'Germany'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GR', 'Greece'), ('GL', 'Greenland'), ('GD', 'Grenada'), ('GP', 'Guadeloupe'), ('GU', 'Guam'), ('GT', 'Guatemala'), ('GN', 'Guinea'), ('GW', 'Guinea'), ('GY', 'Guyana'), ('HT', 'Haiti'), ('HM', 'Heard Island And Mcdonald Islands'), ('HN', 'Honduras'), ('HK', 'Hong Kong'), ('HU', 'Hungary'), ('IS', 'Iceland'), ('IN', 'India'), ('ID', 'Indonesia'), ('IR', 'Iran, Islamic Republic Of'), ('IQ', 'Iraq'), ('IE', 'Ireland'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JP', 'Japan'), ('JO', 'Jordan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KI', 'Kiribati'), ('KP', "Korea, Democratic People'S Republic Of"), ('KR', 'Korea, Republic Of'), ('KW', 'Kuwait'), ('KG', 'Kyrgyzstan'), ('LA', "Lao People'S Democratic Republic"), ('LV', 'Latvia'), ('LB', 'Lebanon'), ('LS', 'Lesotho'), ('LR', 'Liberia'), ('LY', 'Libyan Arab Jamahiriya'), ('LI', 'Liechtenstein'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('MO', 'Macao'), ('MK', 'Macedonia, The Former Yugoslav Republic Of'), ('MG', 'Madagascar'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('MV', 'Maldives'), ('ML', 'Mali'), ('MT', 'Malta'), ('MH', 'Marshall Islands'), ('MQ', 'Martinique'), ('MR', 'Mauritania'), ('MU', 'Mauritius'), ('YT', 'Mayotte'), ('MX', 'Mexico'), ('FM', 'Micronesia, Federated States Of'), ('MD', 'Moldova, Republic Of'), ('MC', 'Monaco'), ('MN', 'Mongolia'), ('MS', 'Montserrat'), ('MA', 'Morocco'), ('MZ', 'Mozambique'), ('MM', 'Myanmar'), ('NA', 'Namibia'), ('NR', 'Nauru'), ('NP', 'Nepal'), ('NL', 'Netherlands'), ('AN', 'Netherlands Antilles'), ('NC', 'New Caledonia'), ('NZ', 'New Zealand'), ('NI', 'Nicaragua'), ('NE', 'Niger'), ('NG', 'Nigeria'), ('NU', 'Niue'), ('NF', 'Norfolk Island'), ('MP', 'Northern Mariana Islands'), ('NO', 'Norway'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PW', 'Palau'), ('PS', 'Palestinian Territory, Occupied'), ('PA', 'Panama'), ('PG', 'Papua New Guinea'), ('PY', 'Paraguay'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PN', 'Pitcairn'), ('PL', 'Poland'), ('PT', 'Portugal'), ('PR', 'Puerto Rico'), ('QA', 'Qatar'), ('RE', 'Réunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('SH', 'Saint Helena'), ('KN', 'Saint Kitts And Nevis'), ('LC', 'Saint Lucia'), ('PM', 'Saint Pierre And Miquelon'), ('VC', 'Saint Vincent And The Grenadines'), ('WS', 'Samoa'), ('SM', 'San Marino'), ('ST', 'Sao Tome And Principe'), ('SA', 'Saudi Arabia'), ('SN', 'Senegal'), ('CS', 'Serbia And Montenegro'), ('SC', 'Seychelles'), ('SL', 'Sierra Leone'), ('SG', 'Singapore'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SB', 'Solomon Islands'), ('SO', 'Somalia'), ('ZA', 'South Africa'), ('GS', 'South Georgia And South Sandwich Islands'), ('ES', 'Spain'), ('LK', 'Sri Lanka'), ('SD', 'Sudan'), ('SR', 'Suriname'), ('SJ', 'Svalbard And Jan Mayen'), ('SZ', 'Swaziland'), ('SE', 'Sweden'), ('CH', 'Switzerland'), ('SY', 'Syrian Arab Republic'), ('TW', 'Taiwan, Province Of China'), ('TJ', 'Tajikistan'), ('TZ', 'Tanzania, United Republic Of'), ('TH', 'Thailand'), ('TL', 'Timor'), ('TG', 'Togo'), ('TK', 'Tokelau'), ('TO', 'Tonga'), ('TT', 'Trinidad And Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TM', 'Turkmenistan'), ('TC', 'Turks And Caicos Islands'), ('TV', 'Tuvalu'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('AE', 'United Arab Emirates'), ('GB', 'United Kingdom'), ('US', 'United States'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('UZ', 'Uzbekistan'), ('VU', 'Vanuatu'), ('VN', 'Viet Nam'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('WF', 'Wallis And Futuna'), ('EH', 'Western Sahara'), ('YE', 'Yemen'), ('ZW', 'Zimbabwe'), ('ZM', 'Zambia')], default='ZA', max_length=254, unique=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, unique=True)),
                ('icon', models.FileField(default='vehicle/tesla.svg', upload_to='icons/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['svg'])])),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Make',
                'verbose_name_plural': 'Makes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, unique=True)),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='tradings.make')),
            ],
            options={
                'verbose_name': 'Model',
                'verbose_name_plural': 'Models',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='states', to='tradings.country')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cities', to='tradings.country')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cities', to='tradings.state')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=254)),
                ('year', models.IntegerField(choices=[(2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], default=2020, verbose_name='year')),
                ('price', models.IntegerField(default=200000)),
                ('mileage', models.IntegerField(default=0)),
                ('engine_capacity', models.IntegerField(default=0)),
                ('video_url', models.URLField(default='https://www.youtube.com/embed/pQuMOH6K5OI')),
                ('condition', models.CharField(choices=[('new', 'New Car'), ('used', 'Used Car'), ('demo', 'Demo Car'), ('accident', 'Accident Car')], default='new', max_length=100)),
                ('colour', models.CharField(default='White', max_length=100)),
                ('top_speed', models.IntegerField(default=200)),
                ('stock', models.IntegerField(default=1)),
                ('horse_power', models.IntegerField(default=200)),
                ('photo', django_resized.forms.ResizedImageField(crop=['middle', 'center'], default='vehicle/car.jpg', force_format='JPEG', keep_meta=True, quality=75, scale=1, size=[882, 484], upload_to=tradings.helpers.user_directory_path)),
                ('airbag_quantity', models.IntegerField(default=5)),
                ('gears', models.IntegerField(default=4)),
                ('description', models.TextField(blank=True, null=True)),
                ('short_description', models.CharField(blank=True, max_length=500, null=True)),
                ('type', models.CharField(choices=[('suv', 'SUV'), ('bus', 'Bus'), ('truck', 'Truck'), ('sedan', 'Sedan'), ('coupe', 'Coupe'), ('bakkie', 'Bakkie'), ('minivan', 'Minivan'), ('crossover', 'Crossover'), ('hatchback', 'Hatchback'), ('sportscar', 'Sports car'), ('convertible', 'Convertible'), ('pickuptruck', 'Pickup Truck'), ('stationwagon', 'Station Wagon')], default='sedan', max_length=100)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sold', 'Sold'), ('pending', 'Pending'), ('published', 'Published')], default='draft', max_length=100)),
                ('slug', models.SlugField(default=uuid.uuid4, max_length=250, unique=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_vehicles', to='tradings.city')),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='make_vehicles', to='tradings.make')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='tradings.carmodel')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_vehicles', to='tradings.state')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('side', models.CharField(choices=[('interior', 'interior'), ('exterior', 'exterior'), ('colour', 'Colour')], default='interior', max_length=300)),
                ('photo', django_resized.forms.ResizedImageField(crop=['middle', 'center'], force_format='JPEG', keep_meta=True, quality=75, scale=1, size=[882, 484], upload_to=tradings.helpers.user_directory_path_image)),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='tradings.color')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='tradings.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Enquiry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=300)),
                ('email', models.EmailField(max_length=300)),
                ('phone', models.CharField(max_length=25)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquires', to='tradings.vehicle')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleKeyFeatures',
            fields=[
                ('premium_pheel', models.BooleanField(default=False)),
                ('sun_roof', models.BooleanField(default=False)),
                ('premium_audio', models.BooleanField(default=False)),
                ('navigation', models.BooleanField(default=False)),
                ('bluetooth', models.BooleanField(default=False)),
                ('premium_seat_material', models.BooleanField(default=False)),
                ('front_heated_seats', models.BooleanField(default=False)),
                ('remote_engine_start', models.BooleanField(default=False)),
                ('blind_spot_System', models.BooleanField(default=False)),
                ('multi_zone_climate_control', models.BooleanField(default=False)),
                ('has_roof_rack', models.BooleanField(default=False)),
                ('electronic_doors', models.BooleanField(default=False)),
                ('has_security', models.BooleanField(default=False)),
                ('push_start_button', models.BooleanField(default=False)),
                ('turbo_charger', models.BooleanField(default=False)),
                ('driver_airbag', models.BooleanField(default=False)),
                ('side_airbag', models.BooleanField(default=False)),
                ('front_passenger_airbag', models.BooleanField(default=False)),
                ('cruise_control', models.BooleanField(default=True)),
                ('anti_lock_braking_systems', models.BooleanField(default=False)),
                ('front_park_camera', models.BooleanField(default=False)),
                ('power_steering', models.BooleanField(default=False)),
                ('roll_stabilitity_control', models.BooleanField(default=False)),
                ('rear_parking_camera', models.BooleanField(default=False)),
                ('electronic_windows', models.BooleanField(default=False)),
                ('electronic_brake_pressure_distribution', models.BooleanField(default=False)),
                ('has_immobilzer', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='key_features', to='tradings.vehicle')),
            ],
            options={
                'verbose_name': 'KeyFeature',
                'verbose_name_plural': 'KeyFeatures',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleOtherFeatures',
            fields=[
                ('induction', models.CharField(default='Aspirated', max_length=254)),
                ('cylinders', models.IntegerField(default=0)),
                ('wheels', models.IntegerField(default=4)),
                ('seats', models.IntegerField(default=4)),
                ('engine_config', models.CharField(default='In-line', max_length=254)),
                ('valve_gear', models.CharField(default='DOHC with VVT', max_length=254)),
                ('fuel_injection', models.CharField(default='Direct Injection', max_length=254)),
                ('engine_size', models.CharField(default='3.5 L', max_length=100)),
                ('fuel_type', models.CharField(choices=[('Petrol', 'Petrol'), ('Desiel', 'Desiel'), ('Electric', 'Electric')], default='Petrol', max_length=100)),
                ('transmission', models.CharField(choices=[('Automatic', 'Automatic'), ('Manual', 'Manual'), ('Other', 'Other')], default='Manual', max_length=100)),
                ('engine_location', models.CharField(default='Aspirated', max_length=254)),
                ('power', models.CharField(default='140 kw ', max_length=254)),
                ('torque', models.CharField(default='7000 rpm', max_length=254)),
                ('drive_type', models.CharField(default='FWD', max_length=254)),
                ('body_type', models.CharField(choices=[('suv', 'SUV'), ('bus', 'Bus'), ('truck', 'Truck'), ('sedan', 'Sedan'), ('coupe', 'Coupe'), ('bakkie', 'Bakkie'), ('minivan', 'Minivan'), ('crossover', 'Crossover'), ('hatchback', 'Hatchback'), ('sportscar', 'Sports car'), ('convertible', 'Convertible'), ('pickuptruck', 'Pickup Truck'), ('stationwagon', 'Station Wagon')], default='Hatchback', max_length=254)),
                ('global_safety_rating', models.CharField(default='G NCAP Rating', help_text='Global NCAP Safety Rating', max_length=254)),
                ('stearing_wheel', models.CharField(default='Standard', max_length=100)),
                ('bluetooth', models.CharField(default='Standard', max_length=100)),
                ('usb_port', models.CharField(default='Standard', max_length=100)),
                ('remote_central_locking', models.CharField(default='Standard', max_length=100)),
                ('is_repaired', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='other_features', to='tradings.vehicle')),
            ],
            options={
                'verbose_name': 'EngineFeature',
                'verbose_name_plural': 'EngineFeatures',
                'abstract': False,
            },
        ),
    ]
