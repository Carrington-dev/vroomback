# Generated by Django 5.0.4 on 2024-04-29 11:16

import datetime
import django.db.models.deletion
import django_resized.forms
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, unique=True)),
                ('hexadecimal', models.CharField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=254, unique=True)),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='tradings.make')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=254)),
                ('price', models.IntegerField(default=200000)),
                ('mileage', models.IntegerField(default=0)),
                ('engine_capacity', models.IntegerField(default=0)),
                ('video_url', models.URLField(default='https://www.youtube.com/embed/pQuMOH6K5OI')),
                ('condition', models.CharField(choices=[('New Car', 'New Car'), ('Used Car', 'Used Car'), ('Demo Car', 'Demo Car'), ('Accident Car', 'Accident Car')], default='New Car', max_length=100)),
                ('colour', models.CharField(default='White', max_length=100)),
                ('top_speed', models.IntegerField(default=200)),
                ('stock', models.IntegerField(default=1)),
                ('horse_power', models.IntegerField(default=200)),
                ('airbag_quantity', models.IntegerField(default=5)),
                ('gears', models.IntegerField(default=4)),
                ('description', models.TextField(blank=True, null=True)),
                ('short_description', models.CharField(blank=True, max_length=500, null=True)),
                ('slug', models.SlugField(max_length=250, unique=True)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_vehicles', to='tradings.city')),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='make_vehicles', to='tradings.make')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='tradings.carmodel')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state_vehicles', to='tradings.state')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('photo', django_resized.forms.ResizedImageField(crop=['middle', 'center'], force_format='JPEG', keep_meta=True, quality=75, scale=0.5, size=[1080, 1440], upload_to='car/photos/%Y/%m/%d/')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='tradings.color')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='tradings.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleKeyFeatures',
            fields=[
                ('premium_pheel', models.BooleanField(default=False)),
                ('sun_roof', models.BooleanField(default=False)),
                ('premium_audio', models.BooleanField(default=False)),
                ('navigation', models.BooleanField(default=False)),
                ('bluetooth', models.BooleanField(default=False)),
                ('premium_seat_material', models.BooleanField(default=False)),
                ('front_heated_seats', models.BooleanField(default=False)),
                ('remote_engine_start', models.BooleanField(default=False)),
                ('blind_spot_System', models.BooleanField(default=False)),
                ('multi_zone_climate_control', models.BooleanField(default=False)),
                ('has_roof_rack', models.BooleanField(default=False)),
                ('electronic_doors', models.BooleanField(default=False)),
                ('has_security', models.BooleanField(default=False)),
                ('push_start_button', models.BooleanField(default=False)),
                ('turbo_charger', models.BooleanField(default=False)),
                ('driver_airbag', models.BooleanField(default=False)),
                ('side_airbag', models.BooleanField(default=False)),
                ('front_passenger_airbag', models.BooleanField(default=False)),
                ('cruise_control', models.BooleanField(default=True)),
                ('anti_lock_braking_systems', models.BooleanField(default=False)),
                ('front_park_camera', models.BooleanField(default=False)),
                ('power_steering', models.BooleanField(default=False)),
                ('roll_stabilitity_control', models.BooleanField(default=False)),
                ('rear_parking_camera', models.BooleanField(default=False)),
                ('electronic_windows', models.BooleanField(default=False)),
                ('electronic_brake_pressure_distribution', models.BooleanField(default=False)),
                ('has_immobilzer', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_key_features', to='tradings.vehicle')),
            ],
            options={
                'verbose_name': 'KeyFeature',
                'verbose_name_plural': 'KeyFeatures',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VehicleOtherFeatures',
            fields=[
                ('induction', models.CharField(max_length=254)),
                ('cylinders', models.IntegerField(default=0)),
                ('wheels', models.IntegerField(default=4)),
                ('seats', models.IntegerField(default=4)),
                ('engine_config', models.CharField(max_length=254)),
                ('valve_gear', models.CharField(max_length=254)),
                ('fuel_injection', models.CharField(max_length=254)),
                ('engine_size', models.CharField(default='3.5 L', max_length=100)),
                ('fuel_type', models.CharField(choices=[('Petrol', 'Petrol'), ('Desiel', 'Desiel'), ('Electric', 'Electric')], default='Petrol', max_length=100)),
                ('transmission', models.CharField(choices=[('Automatic', 'Automatic'), ('Manual', 'Manual'), ('Other', 'Other')], default='Manual', max_length=100)),
                ('engine_location', models.CharField(max_length=254)),
                ('power', models.CharField(max_length=254)),
                ('torque', models.CharField(max_length=254)),
                ('drive_type', models.CharField(max_length=254)),
                ('global_safety_rating', models.CharField(help_text='Global NCAP Safety Rating', max_length=254)),
                ('stearing_wheel', models.CharField(default='Standard', max_length=100)),
                ('bluetooth', models.CharField(default='Standard', max_length=100)),
                ('usb_port', models.CharField(default='Standard', max_length=100)),
                ('remote_central_locking', models.CharField(default='Standard', max_length=100)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vehicle', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='other_vehicle_key_features', to='tradings.vehicle')),
            ],
            options={
                'verbose_name': 'KeyEngineFeature',
                'verbose_name_plural': 'KeyEngineFeatures',
                'abstract': False,
            },
        ),
    ]
